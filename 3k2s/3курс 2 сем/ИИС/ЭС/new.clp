(defglobal
   ?*a* = "a"
   ?*b* = "b"
   ?*pole3* = "baza.txt"
)
(deftemplate Кот
        (slot Порода (type STRING))
	(slot Описание (type STRING)))

(deffunction спросить (?вопрос $?ответы)
(printout t ?вопрос)
(bind ?ответ (read))
(bind ?count 1)
(if (lexemep ?ответ)
then
(bind ?ответ (lowcase ?ответ)))

(if (eq ?ответ р) then (assert (repair2 restart)) (return))
(while (not (member ?ответ ?ответы)) do
(bind ?count (+ ?count 1))
(printout t ?вопрос)
(bind ?ответ (read))
(if (= ?count 3) then (printout t "Введите (Да/Нет)" crlf))
(if (= ?count 4) then (assert (repair2 restart)) (return))
(if (lexemep ?ответ)
then
(bind ?ответ (lowcase ?ответ)))) 
?ответ
)

(defmethod данет (?вопрос) 
(bind ?ввод (спросить ?вопрос да нет))
(if (eq ?ввод да)
then 
TRUE 
else 
FALSE) 
)


(defrule Вопрос1 ""
(not(Окрас ?))
(not (repair ?))
=>
(if (данет "Окрас: однотонный(Да/Нет)? ")
then
(assert (Окрас да))
else (assert (Окрас нет)))
)

(defrule Вопрос2 ""
(Окрас да)
(not (Уши ?))
(not (repair ?))
=>
(if (данет "Уши: высоко поставленные(Да/Нет)? ")
then
 (assert (Уши да)) 
else (assert (Уши нет)))
)

(defrule Вопрос3 ""
(Окрас да)
(Уши нет)
(not (Тело ?))
(not (repair ?))
=>
(if (данет "Тело: большое(Да/Нет)? ")
then
 (assert (Тело да)) 
else (assert (Тело нет)))
)

(defrule Вопрос4 ""
(Окрас да)
(Тело нет)
(not (Глаза ?))
(not (repair ?))
=>
(if (данет "Глаза: большие(Да/Нет)? ")
then
 (assert (Глаза да)) 
else (assert (Глаза нет)))
)
(defrule Вопрос5 ""
(Окрас да)
(Глаза нет)
(not (Мочка ?))
(not (repair ?))
=>
(if (данет "Мочка носа: кончик носа и подушечки лап розовые(Да/Нет)? ")
then
 (assert (Мочка да)) 
else (assert (Мочка нет)))
)
(defrule Вопрос6 ""
(Окрас да)
(Мочка нет)
(not (Хвост ?))
(not (repair ?))
=>
(if (данет "Хвост: длинный(Да/Нет)? ")
then
 (assert (Хвост да)) 
else (assert (Хвост нет)))
)
(defrule Вопрос7 ""
(Окрас нет)
(not (Хвост ?))
(not (repair ?))
=>
(if (данет "Хвост: длинный(Да/Нет)? ")
then
 (assert (Хвост да)) 
else (assert (Хвост нет)))
)
(defrule Вопрос8 ""
(Окрас нет)
(Хвост да)
(not (Уши ?))
(not (repair ?))
=>
(if (данет "Уши: высоко поставленные(Да/Нет)? ")
then
 (assert (Уши да)) 
else (assert (Уши нет)))
)
(defrule Вопрос9 ""
(Окрас нет)
(Хвост да)
(Уши нет)
(not (Тело ?))
(not (repair ?))
=>
(if (данет "Тело: большое(Да/Нет)? ")
then
 (assert (Тело да)) 
else (assert (Тело нет)))
)
(defrule Вопрос10 ""
(Окрас нет)
(Хвост да)
(Тело нет)
(not (Голова ?))
(not (repair ?))
=>
(if (данет "Голова: клиновидная(Да/Нет)? ")
then
 (assert (Голова да)) 
else (assert (Голова нет)))
)
(defrule Вопрос11 ""
(Окрас нет)
(Хвост нет) 
(not (Уши ?))
(not (repair ?))
=>
(if (данет "Уши: высоко поставленные(Да/Нет)? ")
then
 (assert (Уши да)) 
else (assert (Уши нет)))
)
(defrule Вопрос12 ""
(Окрас нет)
(Хвост нет) 
(Уши да)
(not (Голова ?))
(not (repair ?))
=>
(if (данет "Голова: клиновидная(Да/Нет)? ")
then
 (assert (Голова да)) 
else (assert (Голова нет)))
)
(defrule Вопрос13 ""
(Окрас нет)
(Хвост нет) 
(Уши нет)
(not (Тело ?))
(not (repair ?))
=>
(if (данет "Тело: большое(Да/Нет)? ")
then
 (assert (Тело да)) 
else (assert (Тело нет)))
)
(defrule Вопрос14 ""
(Окрас нет)
(Хвост нет)
(Тело нет)
(not (Голова ?))
(not (repair ?))
=>
(if (данет "Голова: клиновидная(Да/Нет)? ")
then
 (assert (Голова да)) 
else (assert (Голова нет)))
)
(defrule Вопрос15 ""
(Окрас нет)
(Хвост нет)
(Голова нет)
(not (Шерсть ?))
(not (repair ?))
=>
(if (данет "Шерсть: короткая(Да/Нет)? ")
then
 (assert (Шерсть да)) 
else (assert (Шерсть нет)))
)
(defrule Проверка1 ""
(Окрас да)(Уши да)
(not (repair ?))
=>
(assert (repair "Форин Вайт"))
(assert (desciption "Эта порода получилась в результате сведения сиамскй и однотонной белой домашней кошек"))
(bind ?*a* "Форин Вайт")
(bind ?*b* "Эта порода получилась в результате сведения сиамскй и однотонной белой домашней кошек")
)
(defrule Проверка2 ""
(Окрас да)(Тело да)
(not (repair ?))
=>
(assert (repair "Йорская шоколадная кошка"))
(assert (desciption "Автором породы считается Дженнет Чифари. У этой женщины были беспородныые кот и кошка, в предках которых были примеси сиамских кошек. Котята родились с шоколадным окрасом, который им достался от сиамских генов родителей."))
(bind ?*a* "Йорская шоколадная кошка")
(bind ?*b* "Автором породы считается Дженнет Чифари. У этой женщины были беспородныекот и кошка, в предках которых были примеси симских кошек. Котята родились с шоколадным окрасом, который им достался от сиамских генов родителей.")
)
(defrule Проверка3 ""
(Окрас да)(Глаза да)
(not (repair ?))
=>
(assert (repair "Корат"))
(assert (desciption "Упоминание голубых кошек си-ват, живущих на высокогорном плато Крат у северо-восточной границы Таиланда присутствовало еще в древней кошачьей книге стихов"))
(bind ?*a* "Корат")
(bind ?*b* "Упоминание голубых кошек си-ват, живущих на высокогорном плато Крат у северо-восточной границы Таиланда присутствовало еще в древней кошачьей книге стихов")
)
(defrule Проверка4 ""
(Окрас да)(Мочка да)
(not (repair ?))
=>
(assert (repair "Гавана"))
(assert (desciption "Результат скрещивания кошек еропейский короткошерстой и симской с темно-коричневыми отметинами"))
(bind ?*a* "Гавана")
(bind ?*b* "Результат скрещивания кошек еропейский короткошерстой и симской с темно-коричневыми отметинами")
)
(defrule Проверка5 ""
(Окрас да)(Хвост да)
(not (repair ?))
=>
(assert (repair "Русская голубая кошка"))
(assert (desciption "Порода домашней кошки. Стала известная в России только с началом фелинологического движения"))
(bind ?*a* "Русская голубая кошка")
(bind ?*b* "Порода домашней кошки. Стала известная в России только с началом фелинологического движения")
)
(defrule Проверка6 ""
(Окрас да)(Хвост нет)
(not (repair ?))
=>
(assert (repair "Не удалось определить"))
(assert (desciption "Попробуйте еще раз"))
)
(defrule Проверка7 ""
(Окрас нет)(Хвост да)(Уши да)
(not (repair ?))
=>
(assert (repair "Донской сфинкс"))
(assert (desciption "Порода российских бесшерстных кошек.Отличается мускулистым телом и шелковистой, горячей на ощуп кожей"))
(bind ?*a* "Донской сфинкс")
(bind ?*b* "Порода российских бесшерстных кошек.Отличается мускулистым телом и шелковистой, горячей на ощуп кожей")
)

(defrule Проверка8 ""
(Окрас нет)(Хвост да)(Тело да)
(not (repair ?))
=>
(assert (repair "Персидская кошка"))
(assert (desciption "Порода длинношерстных кошек, одна из старейших и самых популярных в мире. Не может жить вне дома"))
(bind ?*a* "Персидская кошка")
(bind ?*b* "Порода длинношерстных кошек, одна из старейших и самых популярных в мире. Не может жить вне дома")
)
(defrule Проверка9 ""
(Окрас нет)(Хвост да)(Голова да)
(not (repair ?))
=>
(assert (repair "Бразильская кроткошерстная кошка"))
(assert (desciption "Относится к естесственным породам. Долгое время жили на воле"))
(bind ?*a* "Бразильская кроткошерстная кошка")
(bind ?*b* "Относится к естесственным породам. Долгое время жили на воле")
)
(defrule Проверка10 ""
(Окрас нет)(Хвост да)(Голова нет)
(not (repair ?))
=>
(assert (repair "Не удалось определить"))
(assert (desciption "Попробуйте еще раз")) 
)
(defrule Проверка11 ""
(Окрас нет)(Хвост нет)(Уши да)(Голова нет)
(not (repair ?))
=>
(assert (repair "Не удалось определить"))
(assert (desciption "Попробуйте еще раз"))
)
(defrule Проверка12 ""
(Окрас нет)(Хвост нет)(Уши да)(Голова да)
(not (repair ?))
=>
(assert (repair "Японский бобтейл"))
(assert (desciption "Родом из Японии. В качестве отдельной породы признана в 1968 году. В европе эти кошки все еще довольно редки"))
(bind ?*a* "Японский бобтейл")
(bind ?*b* "Родом из Японии. В качестве отдельной породы признана в 1968 году. В европе эти кошки все еще довольно редки")
)
(defrule Проверка13 ""
(Окрас нет)(Хвост нет)(Уши нет)(Тело да)
(not (repair ?))
=>
(assert (repair "Кимрик"))
(assert (desciption "Отличительная особенность это породы - отсутсвие хвоста"))
(bind ?*a* "Кимрик")
(bind ?*b* "Отличительная особенность это породы - отсутсвие хвоста")

)
(defrule Проверка14 ""
(Окрас нет)(Хвост нет)(Глова да)(Тело нет)
(not (repair ?))
=>
(assert (repair "Не удалось определить"))
(assert (desciption "Попробуйте еще раз"))
)
(defrule Проверка15 ""
(Окрас нет)(Шерсть нет)
(not (repair ?))
=>
(assert (repair "Не удалось определить"))
(assert (desciption "Попробуйте еще раз"))
)
(defrule Проверка16 ""
(Окрас нет)(Шерсть да)
(not (repair ?))
=>
(assert (repair "Мекгонский бобтейл"))
(assert (desciption "Их хвосты уникальны. У каждого кота они неповторимы, украшены прихотливыми изломами и петлями"))
(bind ?*a* "Мекгонский бобтейл")
(bind ?*b* "Их хвосты уникальны. У каждого кота они неповторимы, украшены прихотливыми изломами и петлями")
)

(defrule restarter " "
(declare (salience 10))
(repair2 restart)
=>
(if (данет "рестарт?(Да/Нет) ")
then (reset)
else (exit)
)
)

(defrule system-banner ""
(declare (salience 10))
=>
(printout t crlf crlf)
(printout t "__________________________________" crlf) 
(printout t " " crlf) 
(printout t "            >^,^<" crlf) 
(printout t "            Экспертная система помогающая определить породу кота" crlf)
(printout t "            Разработал Михно Никита студент группы 13-ит-3" crlf)
(printout t "__________________________________" crlf)
(printout t crlf crlf) )

(defrule print-repair ""
(declare (salience 10))
(repair ?вывод)
(desciption ?описание)
=>
(printout t "__________________________________" crlf)
(printout t " " crlf)
(printout t "       "?вывод crlf)
(printout t "       "?описание crlf)
(printout t "__________________________________" crlf)
(assert (repair2 save))
(assert (repair2 loading))

)


(defrule save ""
(repair2 save)
=>
(if (данет "Сохранить в файл?(Да/Нет)  ") then (and (printout t "Введите название файла: ")
(bind ?name (read))
(bind ?*pole3* (str-cat ?name ".txt"))
(bind ?file ?*pole3*) 
(if (not (open ?file baza "r")) then 
		(and (printout t "файл не был найдет -> файл создан" crlf) 
		(open ?file baza "w")(close baza)) 
	else (and (close baza)(open ?file baza2 "a")(printout baza2 "(Кот (Порода \""?*a* "\")(Описание \"" ?*b* "\"))" crlf)(close baza2)(printout t "Готово!"crlf))
		)
)))

(defmethod > (?f1 ?f2)
            (str-compare(fact-slot-value ?f1 Порода) (fact-slot-value ?f2 Порода)))

(defrule loading ""
(repair2 loading)
=>
(if (данет "Загрузить файл?(Да/Нет) ") then (and (printout t "Введите название файла: ")
(bind ?name (read))
(bind ?*pole3* (str-cat ?name ".txt"))
(bind ?file ?*pole3*)(reset) 
(if (open ?file baza "r") 
then 
(and (load-facts ?file)(printout t "Готово" crlf)(close baza))
else (printout t "файл не был найден" crlf)(assert (repair2 restart)))
(if (open ?file baza "r") 
then (if (данет "Отсортировать?(Да/Нет) ") 
then(and (close baza)(bind ?facts (find-all-facts ((?f Кот)) TRUE))
(bind ?facts (sort > ?facts))
(progn$ (?f ?facts)(printout t (fact-slot-value ?f Порода) crlf)
)(assert (repair2 restart)))
else (assert (repair2 restart))))
)))

